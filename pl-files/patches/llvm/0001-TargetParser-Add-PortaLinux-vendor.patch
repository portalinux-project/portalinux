From 2696d7ceb660b58d4458c4ace899b261733c11a6 Mon Sep 17 00:00:00 2001
From: raisin <raisinware@outlook.com>
Date: Sun, 5 May 2024 21:54:43 -0700
Subject: [PATCH 1/3] TargetParser: Add PortaLinux vendor

makes it easier for us to make customisations to LLVM that only affect targeting PortaLinux.
---
 llvm/include/llvm/TargetParser/Triple.h    | 11 +++++++++--
 llvm/lib/TargetParser/Triple.cpp           |  2 ++
 llvm/unittests/TargetParser/TripleTest.cpp |  7 +++++++
 3 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/llvm/include/llvm/TargetParser/Triple.h b/llvm/include/llvm/TargetParser/Triple.h
index 49ec8de9c528..62bcfcf12ddc 100644
--- a/llvm/include/llvm/TargetParser/Triple.h
+++ b/llvm/include/llvm/TargetParser/Triple.h
@@ -182,7 +182,8 @@ public:
     Mesa,
     SUSE,
     OpenEmbedded,
-    LastVendorType = OpenEmbedded
+    PortaLinux,
+    LastVendorType = PortaLinux
   };
   enum OSType {
     UnknownOS,
@@ -755,13 +756,19 @@ public:
     return Version < VersionTuple(Major);
   }
 
+  /// Tests whether the target is PortaLinux
+  bool isPortaLinux() const {
+    return getVendor() == Triple::PortaLinux && isOSLinux();
+  }
+
   /// Tests whether the environment is musl-libc
   bool isMusl() const {
     return getEnvironment() == Triple::Musl ||
            getEnvironment() == Triple::MuslEABI ||
            getEnvironment() == Triple::MuslEABIHF ||
            getEnvironment() == Triple::MuslX32 ||
-           getEnvironment() == Triple::OpenHOS || isOSLiteOS();
+           getEnvironment() == Triple::OpenHOS ||
+           isOSLiteOS() || isPortaLinux();
   }
 
   /// Tests whether the target is OHOS
diff --git a/llvm/lib/TargetParser/Triple.cpp b/llvm/lib/TargetParser/Triple.cpp
index 0bbe8a3cedfd..2c42e19e5cd7 100644
--- a/llvm/lib/TargetParser/Triple.cpp
+++ b/llvm/lib/TargetParser/Triple.cpp
@@ -226,6 +226,7 @@ StringRef Triple::getVendorTypeName(VendorType Kind) {
   case NVIDIA: return "nvidia";
   case OpenEmbedded: return "oe";
   case PC: return "pc";
+  case PortaLinux: return "pocket";
   case SCEI: return "scei";
   case SUSE: return "suse";
   }
@@ -602,6 +603,7 @@ static Triple::VendorType parseVendor(StringRef VendorName) {
     .Case("mesa", Triple::Mesa)
     .Case("suse", Triple::SUSE)
     .Case("oe", Triple::OpenEmbedded)
+    .Case("pocket", Triple::PortaLinux)
     .Default(Triple::UnknownVendor);
 }
 
diff --git a/llvm/unittests/TargetParser/TripleTest.cpp b/llvm/unittests/TargetParser/TripleTest.cpp
index 4db54a08c0f6..bb743d6304fb 100644
--- a/llvm/unittests/TargetParser/TripleTest.cpp
+++ b/llvm/unittests/TargetParser/TripleTest.cpp
@@ -860,6 +860,13 @@ TEST(TripleTest, ParsedIDs) {
   EXPECT_EQ(Triple::UnknownEnvironment, T.getEnvironment());
   EXPECT_TRUE(T.isArch64Bit());
 
+  T = Triple("armv6k-pocket-linux-musleabi");
+  EXPECT_EQ(Triple::arm, T.getArch());
+  EXPECT_EQ(Triple::ARMSubArch_v6k, T.getSubArch());
+  EXPECT_EQ(Triple::PortaLinux, T.getVendor());
+  EXPECT_EQ(Triple::Linux, T.getOS());
+  EXPECT_EQ(Triple::MuslEABI, T.getEnvironment());
+
   T = Triple("arm64_32-apple-ios");
   EXPECT_EQ(Triple::aarch64_32, T.getArch());
   EXPECT_EQ(Triple::IOS, T.getOS());
-- 
2.43.2

