#!/bin/sh
rootdir=$(pwd)/build
init=false
binutils=false
gcc1=false
linux_headers=false
glibc_headers=false
libgcc=true
glibc_libc_so=false
gcc_cpp=false

export PATH="$PATH:$prefix/bin"

if [ "$prefix" = "" ]; then
	prefix=$(echo ~/cross)
fi

if [ "$arch" = "" ]; then
	arch="i486"
fi

# init
if [ $init = true ]; then
	if [ ! -d tarballs ]; then
		./get-deps $@
	fi

	cd tarballs && ../decompress-all
	mkdir $rootdir
	for i in $(ls | grep -v .tar); do
		mv $i $rootdir
	done

	mkdir $prefix -p
	cd $rootdir
fi

# binutils
if [ $binutils = true ]; then
	cd $rootdir/binutils-2.36
	mkdir -p build
	cd build
	../configure --prefix=$prefix --target=$arch-pocket-linux-gnu --disable-mutilib
	make -j2
	make install
fi

# gcc c/c++ compilers
if [ $gcc1 = true ]; then
	cd $rootdir

	ln $rootdir/gmp-6.2.1 gcc-10.3.0/gmp -s
	ln $rootdir/mpc-1.2.1 gcc-10.3.0/mpc -s
	ln $rootdir/mpfr-4.1.0 gcc-10.3.0/mpfr -s

	cd gcc-10.3.0
	mkdir -p build
	cd build
	../configure --prefix=$prefix --target=$arch-pocket-linux-gnu --disable-multilib --enable-languages=c,c++
	make -j2 all-gcc
	make install-gcc
	cd $rootdir
fi

# linux headers
if [ $linux_headers = true ]; then
	cd $rootdir/linux-5.16.10
	if [ $(echo $arch | grep -c 86) -ne 0]; then
		larch=x86
	else
		larch=$arch
	fi
	make ARCH=$arch INSTALL_HDR_PATH=$prefix/$arch-pocket-linux-gnu headers_install
	cd $rootdir
fi

# glibc header files
if [ $glibc_headers = true ]; then
	cd $rootdir/glibc-2.34
	mkdir -p build
	cd build
	../configure --prefix=$prefix/$arch-pocket-linux-gnu --target=$arch-pocket-linux-gnu --disable-multilib
	make install-bootstrap-headers=yes install-headers
	make csu/subdir_lib
	install csu/crti.o csu/crtn.o csu/crt1.o $prefix/$arch-pocket-linux-gnu/lib
	cd $rootdir
fi

# gcc support lib
if [ $libgcc = true ]; then
	touch $prefix/$arch-pocket-linux-gnu/include/gnu/stubs.h
	$arch-pocket-linux-gnu-gcc --shared -x c /dev/null -o $prefix/$arch-pocket-linux-gnu/lib/libc.so
	cd $rootdir/gcc-10.3.0/build
	make -j2 all-gcc
	make install-gcc
	make -j2 all-target-libgcc
	make install-target-libgcc
	cd $rootdir
fi

# glibc libc.so
if [ $glibc_libc_so = true ]; then
	cd $rootdir/glibc-2.34/build
	make -j2
	make install
	cd $rootdir
fi

# gcc c++ library
if [ $gcc_cpp = true ]; then
	cd $rootdir/gcc-10.3.0/build
	make -j2
	make install
	cd $rootdir
fi
