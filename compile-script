#!/bin/sh
rootdir=$(pwd)/build
output=$(pwd)/output

if [ "$toolchain_prefix" = "" ]; then
	toolchain_prefix=$(echo ~/cross)
fi

if [ "$arch" = "" ]; then
	arch="i486"
fi

if [ "$threads" = "" ]; then
	threads="$(nproc)"
fi

export PATH="$PATH:$toolchain_prefix/bin"

# init
if [ ! -d $rootdir ]; then
	if [ ! -d tarballs ]; then
		./get-deps $@
	fi

	cd tarballs && ../decompress-all
	mkdir $rootdir

	for i in $(ls | grep -v .tar); do
		mv $i $rootdir
	done

	mkdir $toolchain_prefix $output -p
	sed 's/limits.h/linux\/limits.h/g' $rootdir/gcc-10.3.0/libsanitizer/asan/asan_linux.cpp > $rootdir/gcc-10.3.0/libsanitizer/asan/asan_linux.cpp
	cd $rootdir
fi

clean_rootdir(){
	for i in $(ls $rootdir); do
		if [ -d $rootdir/$i/build ]; then
			rm -rf $rootdir/$i/build
		fi
	done
}

compile_toolchain(){
	# binutils
	if [ ! -r $toolchain_prefix/bin/$arch-pocket-linux-gnu-as ]; then
		cd $rootdir/binutils-2.36
		mkdir -p build
		cd build
		../configure --prefix=$toolchain_prefix --target=$arch-pocket-linux-gnu --disable-mutilib

		make -j$threads
		make install
	fi

	# gcc c/c++ compilers
	if [ ! -r $toolchain_prefix/bin/$arch-pocket-linux-gnu-gcc ]; then
		cd $rootdir

		ln $rootdir/gmp-6.2.1 gcc-10.3.0/gmp -s
		ln $rootdir/mpc-1.2.1 gcc-10.3.0/mpc -s
		ln $rootdir/mpfr-4.1.0 gcc-10.3.0/mpfr -s

		cd gcc-10.3.0
		mkdir -p build
		cd build
		../configure --prefix=$toolchain_prefix --target=$arch-pocket-linux-gnu --disable-multilib --enable-languages=c,c++

		make -j$threads all-gcc
		make install-gcc
		cd $rootdir
	fi

	# linux headers
	if [ ! -r $toolchain_prefix/$arch-pocket-linux-gnu/include/linux ]; then
		cd $rootdir/linux-5.16.10
		if [ $(echo $arch | grep 86 -c) -ne 0 ]; then
			larch=x86
		else
			larch=$arch
		fi

		make ARCH=$larch INSTALL_HDR_PATH=$toolchain_prefix/$arch-pocket-linux-gnu headers_install
		cd $rootdir
	fi

	# glibc header files
	if [ ! -r $toolchain_prefix/$arch-pocket-linux-gnu/include/stdio.h ]; then
		cd $rootdir/glibc-2.34
		mkdir -p build
		cd build
		../configure --prefix=$toolchain_prefix/$arch-pocket-linux-gnu --host=$arch-pocket-linux-gnu --disable-multilib \
		--with-headers=$toolchain_prefix/$arch-pocket-linux-gnu/include libc_cv_forced_unwind=yes

		make install-bootstrap-headers=yes install-headers
		make csu/subdir_lib
		install csu/crti.o csu/crtn.o csu/crt1.o $toolchain_prefix/$arch-pocket-linux-gnu/lib
		cd $rootdir
	fi

	# gcc support lib
	if [ ! -r $toolchain_prefix/$arch-pocket-linux-gnu/lib/libgcc_s.so.1 ]; then
		touch $toolchain_prefix/$arch-pocket-linux-gnu/include/gnu/stubs.h
		touch $toolchain_prefix/$arch-pocket-linux-gnu/include/gnu/stubs-32.h
		touch $toolchain_prefix/$arch-pocket-linux-gnu/include/gnu/stubs-64.h
		$arch-pocket-linux-gnu-gcc -nostdlib -nostartfiles -shared -x c /dev/null -o $toolchain_prefix/$arch-pocket-linux-gnu/lib/libc.so

		cd $rootdir/gcc-10.3.0/build
		make -j$threads all-gcc
		make install-gcc
		make -j$threads all-target-libgcc
		make install-target-libgcc
		cd $rootdir
	fi

	# glibc libc.so
	if [ ! -r $toolchain_prefix/$arch-pocket-linux-gnu/lib/libc.a ]; then
		cd $rootdir/glibc-2.34/build

		make -j$threads
		make install
		cd $rootdir
	fi

	# gcc c++ library
	if [ ! -r $toolchain_prefix/$arch-pocket-linux-gnu/lib/libstdc++.a ]; then
		cd $rootdir/gcc-10.3.0/build

		make -j$threads
		make install
		cd $rootdir
	fi
}

compile_rootfs(){
	if ! command -v $arch-pocket-linux-gnu-gcc &> /dev/null; then
		compile_toolchain
		clean_rootdir
	fi

	for i in bin lib sbin usr/bin usr/lib usr/sbin etc root mnt home; do
		mkdir -p $output/$i
	done

	if [ ! -d $output/usr/include/linux ]; then
		cd $rootdir/linux-5.16.10
		if [ $(echo $arch | grep 86 -c) -ne 0 ]; then
			larch=x86
		else
			larch=$arch
		fi

		make ARCH=$larch INSTALL_HDR_PATH=$output/usr headers_install
		cd $rootdir
	fi

	if [ ! -r $output/usr/include/stdio.h ]; then
		cd $rootdir/glibc-2.34
		mkdir build
		cd build
		../configure --prefix=/usr --with-sysroot=/ --disable-multilib 	--host=$arch-pocket-linux-gnu \
		libc_cv_forced_unwind=yes

		make install-bootstrap-headers=yes install-headers DESTDIR=$output
		make csu/subdir_lib
		install csu/crti.o csu/crtn.o csu/crt1.o $output/usr/lib
		cd $rootdir
	fi

	if [ ! -r $output/usr/lib/libgcc_s.so.1 ]; then
		touch $output/usr/include/gnu/stubs.h
		touch $output/usr/include/gnu/stubs-32.h
		touch $output/usr/include/gnu/stubs-64.h
		$arch-pocket-linux-gnu-gcc -nostdlib -nostartfiles -shared -x c /dev/null -o $output/usr/lib/libc.so

		cd $rootdir/gcc-10.3.0
		mkdir build
		cd build
		../configure --prefix=/usr --with-sysroot=/ --disable-multilib --host=$arch-pocket-linux-gnu

		make all-target-libgcc -j$threads
		make install-target-libgcc DESTDIR=$output
	fi

	if [ ! -r $output/usr/lib/libc.a ]; then
		cd $rootdir/glibc-2.34/build

		make -j$threads
		make install DESTDIR=$output
	fi

	if [ -r $output/usr/lib/libstdc++.a ]; then
		cd $rootdir/gcc-10.3.0/build

		make -j$threads
		make DESTDIR=$output
	fi
}

clean_rootdir
compile_rootfs
